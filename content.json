{"pages":[{"title":"404","text":"","path":"404/index.html","date":"01-13","excerpt":""},{"title":"about","text":"","path":"about/index.html","date":"01-13","excerpt":""},{"title":"categories","text":"","path":"categories/index.html","date":"01-13","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"01-13","excerpt":""},{"title":"tags","text":"","path":"tags/index.html","date":"01-13","excerpt":""}],"posts":[{"title":"浅谈css的三种预处理器--Less，Sass以及Stylus","text":"浅谈css的三种预处理器–Less，Sass以及Stylus写在前面： 问：css本身可以写样式，但是为什么还会出现css的预处理器呢? 答：就CSS本身而言，它不是一种编程语言。也就是说，我们用它来对网页的开发是没有问题的，但是我们却不能用它来编程。由此，神通广大的程序员们就开始想办法了。~~~~我们要让css像其他程序语言一样！！我们也要编程！！于是。。。就产生了一个预处理器，两个预处理器，三个预处理器😂 甚至更多。 css预处理器的好处 css预处理器其实就是为css设计了一套属于自己的衣服，让他也能有像其他编程语言一样的特异功能。当我们预处理完成后在把他编译成正常的css文件。这样做的好处是当我们使用了预处理器后，我们在编写样式的时候会更加的方便，代码的可读性也会更高，当然，我们写的代码也就更容易维护了。 对于Less，Sass以及Stylus预处理器的历史简介1.sass Sass是对CSS的语法的一种扩充，诞生于2007年，最早也是最成熟的一款CSS预处理器语言，它可以使用变量、常量、嵌套、混入、函数等功能，可以更有效有弹性的写出CSS。 sass中文网：https://www.sass.hk/ 2.less LESS由Alexis Sellier于2009年设计。它在 CSS 的语法基础之上，引入了变量，Mixin（混入），运算以及函数等功能，大大简化了 CSS 的编写，并且降低了 CSS 的维护成本，就像它的名称所说的那样，LESS 可以让我们用更少的代码做更多的事情。 less中文网：http://lesscss.cn/ 3.stylus Stylus，2010年产生，来自Node.js社区，主要用来给Node项目进行CSS预处理支持。Stylus 是一种新型语言，可以创建健壮的、动态的、富有表现力的CSS。比较年轻，其本质上做的事情与 SASS/LESS 等类似。 stylus官网：http://stylus-lang.com/ 那么，我们选择哪种预处理器更好呢为了解决这个问题，我们应该先使用对比一下。所以，首先我们来下载这三种预处理器 1.sass下载方法： gem install sass 如果是Mac的话可能会遇到这样的问题： ERROR: While executing gem … (Gem::FilePermissionError)You don’t have write permissions for the /Library/Ruby/Gems/2.0.0 directory. 这是因为没有管理员权限.png ,所以执行： sudo gem install sass 然后输入密码就可以了 2.less下载方法： npm i -g less 3.stylus下载方法： npm i -g stylus 如上所述，我们只需要简单的通过npm安装一下就可以使用了。由于现在主要是为了对他们进行学习，所以我们可以利用webstorm提供的功能来快速的将我们写的样式编译成css文件。如：我们只需要直接点击yes就可以了。 另外，需要注意的是，对于这三种处理器的后缀名是有自己的要求的。其中less文件的后缀为.less; stylus的后缀名为.styl；而sass则有些特殊了，sass有两种后缀名文件：一种后缀名为.sass，不使用大括号和分号；另一种为.scss的文件，这种和我们平时写的css文件格式差不多，使用大括号和分号。 那么，废话不多说，当我们做好这些准备工作后，就可以开始尝试着用一下了。 使用方法eg：让我们一起看看以下几个例子： 一.嵌套 less： .all{ width: @w; height: @h; border: 1px solid skyblue; header{ width: 100px; height: 100px; background-color: gold; p{ font-size: 50px; } :nth-child(2){ color: aqua; } } } 而在stylus 和 sass中： .div1 .p1 background-color: red width: 150px height: 150px 也就是说，三者的嵌套语法都是一致的，甚至连引用父级选择器的标记 &amp; 也相同。区别只是 Sass 和 Stylus 可以用没有大括号的方式书写。 二.变量 对于在预处理器中使用变量的定义方式无疑是革命性的进步。它为CSS 增加了一种有效的复用方式，减少了原来在 CSS 中无法避免的重复「硬编码」。在这三种预处理器中我们都可以使用变量的方式，作用也基本都相同，只是在定义是会用少许不同。如： less： @red: red;strong { color: @red;} stylus： red = redstrong color: red sass： $red: red;strong { color: $red;} 三.继承less： .div1(@num:100px; @color2:pink){ width: @num; height: @num; background-color: @color2;}.box{ .div1(); border-radius: 50%;} 这种方法的缺点就是在每个选择器中会有重复的样式产生。 而stylus &amp;&amp; sass .div1 { margin: 10px 5px; padding: 2px;}p { @extend .div1; border: 1px solid #eee;}ul,ol { @extend .div1; color: #333;} Sass和Stylus的继承是把一个选择器的所有样式继承到另个选择器上。在继承另个选择器的样式时需要使用“@extend”。 这三种预处理器中还支持赋值以及判断等等功能，喜欢的小伙伴可以自行到他们的官网上进行研究，在这里就不多说了。 经过对这三种预处理器简短的尝试之后，我觉得自己还是更加喜欢 less 一点，毕竟这和我们平时写css时的规则很相像。对于初换处理器的我来说更加容易上手。而sass 和 stylus 对于我来说他的改变太过于激进，接受起来稍微有些不太适应。写多了就会感觉有点乱。最后的最后欢迎大家多多尝试。","path":"2018/01/20/浅谈css的三种预处理器-Less，Sass以及Stylus/","date":"01-20","excerpt":""},{"title":"使用hexo和GitHub轻松搭建自己的博客","text":"#使用hexo和GitHub轻松搭建属于自己的博客 关于搭建博客的那点事：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从来都没想过搭建一个自己的博客，在学前端之前甚至连博客是什么都不知道。但是随着学习的深入，接触的东西也越来越多，慢慢发现对于自己学习的检验不只要体现在每天敲代码上，也该有一个类似于笔记的东西来整理自己的心得，所以上网左翻右翻，最后发现写一个博客是个不错的方法（因为只有自己能看到的笔记过后再读常常会发现自己以前写的很草率😕 ）。为了鞭策自己最近下决心来打搭一个自己的博客。 那么问题来了，为什么要搭一个自己的博客呢？ 当然是自主权比较高啦如果我们在一些博客平台上建一个自己的博客的话，虽然很方便，省去了自己找资源，自己搭建的过程，但是同样的，我们的博客会受到这些博客平台这样或那样的限制，比如说可能会限制插件的代码使用啦，广告的插入啦，而且对于你的博客内容也会有各种各样的限制（比如说涉及到政治上，黄赌毒。。。之类的内容。😝 当然，自建博客最好也别和这些沾边。）😝 好啦，不多说了，了解了建博客的好处之后我们就可以开始着手搭建了，接下来就是搭建博客应该做的准备工作了。 准备工作开始&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ps：因为本人现在使用的是苹果机，所以这篇博客将会以 Mac 来作为参考，但是我也在网上看了些有关针对于windows来搭建博客的方法，与mac搭建方法差不多，由于我没有windows的电脑，没有办法看到图片，所以用windows的小伙伴只能自己上网找找了。 1.首先，我们要注册一个Github账号,点击这里：https://github.com/ 可以进入GitHub官网开始注册。2.当我们注册完成后，就可以开始建库了。 如下图所示： 找到 Start a project ,点击建库： 在创建仓库名字的时候一定要输入： 你自己的:Github昵称.github.io 然后点击Create repository创建就可以了。 3.生成秘钥在终端输入： ssh-keygen -t rsa -C “Github的注册邮箱地址” &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这时会出现很多东西，但是你只需要一直Enter就好，等到秘钥生成完毕你会得到id_rsa和 id_rsa.pub 这两个文件。你需要找到放置这两个文件的地方，然后用记事本打开 id_rsa.pub,复制里面所有的内容，然后点击进入https://github.com/settings/ssh/new： 如下图所示： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;随便写一个Title的题目，然后把刚刚复制的内容粘贴到Key中，点击 Add SSH key 创建秘钥。 ps：id_rsa是私钥，id_rsa.pub是公钥。 4.安装node.js&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于如何安装nodejs在这里我就不多说了，如果大家的电脑里没有可以到node.js官网上下载。 5.安装git对于git的安装也很简单，如果没有git的可自行网上查阅 进入正题准备工作做好后，我们开始准备安装配置hexo了 1.建一个文件夹，用来放置你的博客2.在终端中：cd 文件夹 3.下载安装hexonpm install -g hexo-cli 4.完成后输入：hexo 如上图所示：你已经安装hexo成功了 5.建立一个文件夹，随便起名字，如:myHexo。初始化博客hexo init myHexo 6.进入文件夹cd myHexo 7.安装依赖包npm install 8.找到文件中的_config.yml文件，接下来我们将对他进行一些修改注意：对于以下我们每一项的修改，在 : 的后面都一定要留一个空格，不然在接下来的执行中会报错,eg： title: inerdstack✅ title:inerdstack ❎ 打开文件，找到开头: Site 部分，修改为： title: inerdstacksubtitle: the stack of it nerdsdescription: start from zeroauthor: inerdstacklanguage: zh-CNtimezone: Asia/Shanghai 找到 URL 部分，修改为： url: http://自己的域名 找到最下方 Deployment 部分，修改为： deploy: type: git repo: https://github.com/Xqqqqqq/Xqqqqqq.github.io.git branch: master 如下图所示：（这里为什么要配张图呢，是因为小编实在没有排好版啊~~(&gt;_&lt;)~~） 之后保存并关闭就好啦。 接下来我们就可以测试一下试试啦在终端输入：hexo new &quot;文章标题&quot; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这时我们第一篇文章的标题就建好了，我们可以在博客文件夹中的_post看到我们刚刚所建的文件标题，用markdown编辑器打开就可以开始编辑了。现在你可以随便写点内容，保存之后，我们一起来本地测试一下，在终端输入：hexo server 待服务器启动后，打开浏览器输入：http://localhost:4000/ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这时你就可以看到你刚刚编辑的文章了，怎么样，成功了吧 ☺️ 。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;你以为到这里就都结束了么？那你就错了！我们现在还有一个更艰巨的任务========选择一个好看的主题😋 哈哈哈~~~~ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;大家可以根据自己的喜好选择自己喜欢的图片，这里推荐一下这个网址https://hexo.io/themes/,小编正在使用的就是其中的这个主题：http://sora3.coding.me/（强烈安利！！！！因为这个主题实在太好玩了，小编对它爱不释手 😝😝😝 ）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;哈哈。好了这次的内容大概就这么多了，祝大家玩的开心，写的开心。","path":"2018/01/13/使用hexo和GitHub轻松搭建属于自己的博客/","date":"01-13","excerpt":""},{"title":"文章标题","text":"你好，欢迎来到我的个人技术博客","path":"2018/01/12/文章标题/","date":"01-12","excerpt":""},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","path":"2018/01/12/hello-world/","date":"01-12","excerpt":""}]}